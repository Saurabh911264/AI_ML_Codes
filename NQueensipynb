{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyO39CcbaeLfoT2JneEfZ1Ol"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aBSdCZAeUIQk","executionInfo":{"status":"ok","timestamp":1698681675505,"user_tz":-330,"elapsed":21694,"user":{"displayName":"Saurabh Deshmukh Surya","userId":"10125388274772119689"}},"outputId":"b8e29797-0144-4145-e47e-314a1e912ffc"},"outputs":[{"output_type":"stream","name":"stdout","text":["Enter the number of queens\n","4\n","[0, 1, 0, 0]\n","[0, 0, 0, 1]\n","[1, 0, 0, 0]\n","[0, 0, 1, 0]\n"]}],"source":["# Taking number of queens as input from user\n","print (\"Enter the number of queens\")\n","N = int(input())\n","\n","# here we create a chessboard\n","# NxN matrix with all elements set to 0\n","board = [[0]*N for _ in range(N)]\n","\n","def attack(i, j):\n","    #checking vertically and horizontally\n","    for k in range(0,N):\n","        if board[i][k]==1 or board[k][j]==1:\n","            return True\n","    #checking diagonally\n","    for k in range(0,N):\n","        for l in range(0,N):\n","            if (k+l==i+j) or (k-l==i-j):\n","                if board[k][l]==1:\n","                    return True\n","    return False\n","\n","def N_queens(n):\n","    if n==0:\n","        return True\n","    for i in range(0,N):\n","        for j in range(0,N):\n","            if (not(attack(i,j))) and (board[i][j]!=1):\n","                board[i][j] = 1\n","                if N_queens(n-1)==True:\n","                    return True\n","                board[i][j] = 0\n","\n","    return False\n","\n","N_queens(N)\n","for i in board:\n","    print (i)"]},{"cell_type":"code","source":[],"metadata":{"id":"8v2bxR7bUM8r"},"execution_count":null,"outputs":[]}]}